type Pipelines {
  pipelineID: String!
	name: String!
  environmentID: String!
  description: String!
  active: Boolean!
  online: Boolean!
  current: String!
  workerGroup: String!
  created_at: Time!
  updated_at: Time!
  node_type: String!
  node_type_desc: String!
  schedule: String!
  schedule_type: String!
}

# ----- Add/Update flow
input PositionInput {
  x: Float!
  y: Float!
}

input DataInput {
  language: String!
  genericdata: Any
}

input PipelineNodesMetaInput {
  position:  PositionInput!         
	data:      DataInput      
}

input PipelineNodesInput {
  nodeID:        String!         
	name:          String!         
	nodeType:      String!      
  nodeTypeDesc:  String!   
  triggerOnline: Boolean!
	description:   String!  
  commands:      Any!
	meta:          PipelineNodesMetaInput!
  workerGroup:   String!
	active:        Boolean!           
}

input PipelineEdgesMetaInput {
  sourceHandle:  String!
  targetHandle:  String!
  edgeType:      String!
  arrowHeadType: String!
}

input PipelineEdgesInput {
  edgeID:        String!         
	from:          String!         
	to:            String!         
	meta:          PipelineEdgesMetaInput!
	active:        Boolean!           
}

input PipelineFlowInput {
  nodesInput: [PipelineNodesInput!]!
  edgesInput: [PipelineEdgesInput!]!
  json: Any!
}

# ----- Get flow
type PipelineNodes {
	nodeID:        String!       
	pipelineID:    String!         
	name:          String!         
	environmentID: String!         
	nodeType:      String!   
  nodeTypeDesc:  String!   
  triggerOnline: Boolean!
	description:   String!         
  commands:      Any!
	meta:          Any! 
  workerGroup:   String!
	active:        Boolean!           
}

type PipelineEdges {
  edgeID:        String!       
	pipelineID:    String!         
	from:          String!         
	to:            String!         
	environmentID: String!         
	meta:          Any! 
	active:        Boolean!           
}

type PipelineFlow {
  edges: [PipelineEdges!]!
  nodes: [PipelineNodes!]!
}


extend type Query {
  """
  Get pipeline.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, environment_all_pipelines
  """
  getPipeline(pipelineID: String!, environmentID: String!): Pipelines

  """
  Get pipelines.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, environment_all_pipelines
  """
  getPipelines(environmentID: String!): [Pipelines]

  """
  Get pipeline flows.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, environment_all_pipelines
  """
  getPipelineFlow(pipelineID: String!, environmentID: String!): PipelineFlow

  """
  Get node.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, environment_all_pipelines
  """
  getNode(nodeID: String!, environmentID: String!, pipelineID: String!): PipelineNodes
}

extend type Mutation {
  """
  Add a new pipeline.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, environment_edit_all_pipelines
  """
  addPipeline(name: String!, environmentID: String!, description: String!, workerGroup: String! ): String!

  """
  Update pipeline.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, environment_edit_all_pipelines
  """
  updatePipeline(pipelineID: String!, name: String!, environmentID: String!, description: String!, workerGroup: String! ): String!

  """
  Duplicate pipeline.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, environment_edit_all_pipelines
  """
  duplicatePipeline(pipelineID: String!, name: String!, environmentID: String!, description: String!, workerGroup: String!): String!

  """
  Update pipeline flow.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, specific_pipeline[write]
  """
  addUpdatePipelineFlow( input: PipelineFlowInput, environmentID: String!, pipelineID: String! ): String!

  """
  Delete pipeline.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, specific_pipeline[write]
  """
  deletePipeline(environmentID: String!, pipelineID: String! ): String!

  """
  Turn on or off trigger node.
  + **Route**: Private
  + **Permissions**: admin_platform, platform_environment, specific_pipeline[write]
  """
  turnOnOffPipeline(environmentID: String!, pipelineID: String!, online: Boolean!): String!
}
