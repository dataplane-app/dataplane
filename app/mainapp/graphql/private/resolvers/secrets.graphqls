type Secrets {
	Secret:   String!
	SecretType: String!
    Description: String!
	EnvVar:  String!
    Active: Boolean!
    EnvironmentId: String!
    UpdatedAt: Time!
}

input AddSecretsInput {
	Secret:   String!
    Description: String
	Value: String!
    EnvironmentId: String!
    Active: Boolean!
}

input UpdateSecretsInput {
	Secret:   String!
    Description: String
    EnvironmentId: String!
    Active: Boolean!
}

extend type Query{
	"""
	Get secret.
	+ **Route**: Private
	+ **Permission**: admin_platform, admin_environment, environment_secrets
	+ **Security**: Based on selected fields in User struct
	"""
	getSecret(secret: String!, environmentId: String!): Secrets

	"""
	Get secrets.
	+ **Route**: Private
	+ **Permission**: admin_platform, admin_environment, environment_secrets
	+ **Security**: Based on selected fields in User struct
	"""
	getSecrets(environmentId: String!): [Secrets]
}

extend type Mutation {
	"""
	Creating a secret and attaching to an environment.
	+ **Route**: Private
	+ **Permission**: admin_platform, admin_environment, environment_secrets
	"""
  	createSecret(input: AddSecretsInput): Secrets

	"""
	Update a secret's values.
	+ **Route**: Private
	+ **Permission**: admin_platform, admin_environment, environment_secrets
	"""
  	updateSecret(input: UpdateSecretsInput): Secrets

    """
	Update the secret value.
	+ **Route**: Private
	+ **Permission**: admin_platform, admin_environment, environment_secrets
	"""
  	updateSecretValue(secret: String!, value: String!, environmentId: String!): String

	"""
	Delete secret.
	+ **Route**: Private
	+ **Permission**: admin_platform, admin_environment, environment_secrets
	"""
	updateDeleteSecret(secret: String!, environmentId: String!): String
}